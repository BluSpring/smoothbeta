import net.fabricmc.loom.task.RemapJarTask

plugins {
	id 'common-loom' version '1.9-SNAPSHOT'
	id 'ploceus' version '1.9-SNAPSHOT'
	id 'maven-publish'
	id 'xyz.wagyourtail.jvmdowngrader' version '1.3.3'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

jvmdg.downgradeTo = JavaVersion.VERSION_1_8

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

base {
	archivesName = project.archives_base_name
}
version = project.mod_version
group = project.maven_group

loom {
	customMinecraftManifest.set("https://raw.githubusercontent.com/MCPHackers/BetterJSONs/main/jsons/1.0.0.json")
	clientOnlyMinecraftJar()
	mixin {
		useLegacyMixinAp = false // must be set to forcefully remap to official
	}
}

ploceus {
	clientOnlyMappings()
}

configurations {
	shadowMC
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	// Used for the fabric toolchain in this project.
	maven {
		name = 'Babric'
		url = 'https://maven.glass-launcher.net/babric'
	}
	// Used for mappings.
	maven {
		name = 'Glass Releases'
		url = 'https://maven.glass-launcher.net/releases'
	}
	// Used for StationAPI and HowManyItems.
	maven {
		name = 'Glass Snapshots'
		url = 'https://maven.glass-launcher.net/snapshots'
	}
	// Used for a StationAPI dependency.
	maven {
		name = 'Froge'
		url 'https://maven.minecraftforge.net/'
	}
	// Used for projects that do not have a maven repository, but do have a GitHub repository with working build scripts.
	maven {
		name = 'Jitpack'
		url = 'https://jitpack.io'
	}
	// Used for another StationAPI dependency
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	mavenCentral()
	maven { url "https://mcphackers.org/libraries" }
	maven { url "https://maven.ornithemc.net/releases" }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings ploceus.featherMappings(project.feather_build)
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	include(implementation("org.slf4j:slf4j-api:1.8.0-beta4"))
	//implementation 'org.apache.logging.log4j:log4j-slf4j18-impl:2.17.2'
	//implementation(include("me.carleslc:Simple-Yaml:1.8.4") as Dependency)
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	// Loom also requires J17.
	it.options.release = 17
}

shadowJar {
	configurations = [project.configurations.shadowMC]
}

downgradeJar {
	downgradeTo = JavaVersion.VERSION_1_8
	inputFile = remapJar.archiveFile
}

tasks.named("remapJar", RemapJarTask) {
	input = shadowJar.archiveFile
}

shadowJar.finalizedBy(remapJar)
remapJar.finalizedBy(downgradeJar)

remapJar {
	targetNamespace = "clientOfficial"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
